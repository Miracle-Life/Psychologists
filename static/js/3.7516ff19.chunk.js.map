{"version":3,"sources":["Api/api.js","store/actions.js","component/common/Alert/Alert.jsx","img/img1.jpg","component/Users/Card.jsx","component/Disfavorite/Disfavoured.jsx","component/Disfavorite/DisfavoriteContainer.jsx"],"names":["usersAPI","userId","r","ref","db","update","set","name","email","photo","type","followed","id","Math","floor","random","acceptFollow","user","ADD_FAVORITE_USERS","acceptUnfollow","REMOVE_FAVORITE_USERS","toggleIsFetching","isFetching","TOGGLE_IS_FETCHING","toggleInProgress","TOGGLE_IS_FAVORING_PROGRESS","setUserThunkCreator","dispatch","a","getUsersThunkCreator","query","orderByChild","equalTo","starCountRef","onValue","res","users","val","GET_USERS","getUsers","following","unfollowing","delUser","Alert","className","role","Card","props","map","src","info","image","style","height","objectFit","alt","disabled","isAuth","inProgress","some","onClick","Disfavoured","Object","keys","filter","favoriteInProgress","connect","state","usersPage","authUser","useEffect","Preloader"],"mappings":"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","file":"static/js/3.7516ff19.chunk.js","sourcesContent":["import {child, get, onValue, ref, set, update} from \"firebase/database\";\r\nimport {auth, currentUser, db, dbRef} from \"../base\";\r\nimport {\r\n    onAuthStateChanged,\r\n    signInWithEmailAndPassword,\r\n    updateProfile,\r\n    signInWithPopup,\r\n    updateEmail,\r\n    updatePassword,\r\n    deleteUser, GoogleAuthProvider, signOut\r\n} from \"firebase/auth\";\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers() {\r\n\r\n    },\r\n\r\n    //Выбрать пользователя как follow\r\n    setFollow(userId) {\r\n        const r = ref(db, '/psychologists/' + userId)\r\n        return update(r, {\"followed\": true})\r\n    },\r\n\r\n    //Выбрать пользователя как unfollow\r\n    setUnfollow(userId) {\r\n        const r = ref(db, '/psychologists/' + userId)\r\n        return update(r, {\"followed\": false})\r\n    },\r\n\r\n    //Удалить карточку пользователя\r\n    setDelete(userId) {\r\n        return set(ref(db, '/psychologists/' + userId), null)\r\n    },\r\n\r\n    //Создать новую карточку пользователя в базе\r\n    setUser(name, email, photo, type) {\r\n        return set(ref(db, '/psychologists/' + name), {\r\n            email: email,\r\n            followed: false,\r\n            id: Math.floor(Math.random() * 1000000),\r\n            photo: photo === '' ? 'null' : photo,\r\n            type: type\r\n        });\r\n    }\r\n}\r\n\r\nexport const authApi = {\r\n\r\n    //Создать нового пользователя с email и password\r\n    createUserWithEmailAndPassword(email, password) {\r\n        return signInWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                const user = userCredential.user;\r\n                console.log('Create User Successfully', user)\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code;\r\n                console.log('createUserWithEmailAndPassword-errorCode', errorCode)\r\n                const errorMessage = error.message;\r\n                console.log('createUserWithEmailAndPassword-errorMessage', errorMessage)\r\n            });\r\n    },\r\n\r\n    //Войти в аккаунт с использованием email и password если пользователь зарегистрирован\r\n    signInWithEmailAndPassword(email, password) {\r\n        // return signInWithEmailAndPassword(auth, email, password)\r\n        //     .then((userCredential) => {\r\n        //         const user = userCredential.user;\r\n        //         console.log('Signed in', user)\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         const errorCode = error.code;\r\n        //         console.log('signInWithEmailAndPassword-errorCode', errorCode)\r\n        //         const errorMessage = error.message;\r\n        //         console.log('signInWithEmailAndPassword-errorMessage', errorMessage)\r\n        //     });\r\n    },\r\n\r\n    //Войти в аккаунт с помощью Google аккаунта.\r\n    signInWithGoogle() {\r\n        // const provider = new GoogleAuthProvider();\r\n        // return signInWithPopup(auth, provider)\r\n        //     .then((result) => {\r\n        //         const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        //         console.log('signInWithGoogle-Credential', credential)\r\n        //         const token = credential.accessToken;\r\n        //         console.log('signInWithGoogle-Token', token)\r\n        //         const user = result.user;\r\n        //         console.log('signInWithGoogle-User', user)\r\n        //     }).catch((error) => {\r\n        //     const errorCode = error.code;\r\n        //     console.log('signInWithGoogle-ErrorCode', errorCode)\r\n        //     const errorMessage = error.message;\r\n        //     console.log('signInWithGoogle-ErrorMessage', errorMessage)\r\n        //     const email = error.email;\r\n        //     console.log('signInWithGoogle-ErrorEmail', email)\r\n        //     const credential = GoogleAuthProvider.credentialFromError(error);\r\n        //     console.log('signInWithGoogle-ErrorCredential', credential)\r\n        // });\r\n    },\r\n\r\n    //Получить текущего пользователя, вошедшего в систему\r\n    onAuthStateChanged() {\r\n        return onAuthStateChanged(auth, (currentUser) => {\r\n            if (currentUser) {\r\n                console.log('User is signed in', currentUser)\r\n            } else {\r\n                console.log('User is signed out')\r\n            }\r\n        });\r\n    },\r\n\r\n    //Обновить профиль пользователя\r\n    updateProfile(name, photo) {\r\n        return updateProfile(currentUser, {\r\n            displayName: name,\r\n            photoURL: photo,\r\n        }).then(() => {\r\n            console.log('Profile updated!')\r\n        }).catch((error) => {\r\n            console.log('ERROR-updateProfile', error)\r\n        });\r\n    },\r\n\r\n    //Обновить email пользователя\r\n    updateEmail(email) {\r\n        return updateEmail(currentUser, email).then(() => {\r\n            console.log('Email updated!')\r\n        }).catch((error) => {\r\n            console.log('ERROR-updateEmail', error)\r\n        });\r\n    },\r\n\r\n    //Обновить password пользователя\r\n    updatePassword(newPassword) {\r\n        return updatePassword(currentUser, newPassword).then(() => {\r\n            console.log('Password updated successful')\r\n        }).catch((error) => {\r\n            console.log('ERROR-updatePassword', error)\r\n        });\r\n    },\r\n\r\n    //Удалить учетную запись пользователя\r\n    deleteUser() {\r\n        return deleteUser(currentUser).then(() => {\r\n            // console.log(`${user.displayName} deleted`)\r\n            console.log('User deleted')\r\n        }).catch((error) => {\r\n            console.log('ERROR-User_Deleted', error)\r\n        });\r\n    },\r\n\r\n    //Выход пользователя из системы\r\n    signOut() {\r\n        return signOut(auth).then(() => {\r\n            console.log('Sign-out successful')\r\n        }).catch((error) => {\r\n            console.log('signOut-An error happened', error)\r\n        });\r\n    },\r\n\r\n\r\n}\r\n\r\n\r\n// export const getUsers = (toggleIsFetching,setUsers) => {\r\n//     toggleIsFetching(true)\r\n//     const starCountRef = ref(db, \"psychologists\");\r\n//     onValue(starCountRef, (res) => {\r\n//         const data = res.val();\r\n//         setUsers(data)\r\n//         toggleIsFetching(false)\r\n//     });\r\n// }\r\n\r\n\r\n//получение данных с базы в компоненте\r\n// setTimeout(() => {\r\n//     this.props.toggleIsFetching(true)\r\n//     const starCountRef = ref(db, \"psychologists\");\r\n//     onValue(starCountRef, (res) => {\r\n//         const data = res.val();\r\n//         this.props.setUsers(data)\r\n//         this.props.toggleIsFetching(false)\r\n//     });\r\n// }, 2500)\r\n","import {\r\n    ADD_FAVORITE_USERS, REMOVE_FAVORITE_USERS, TOGGLE_IS_FETCHING, TOGGLE_IS_FAVORING_PROGRESS, REMOVE_USER, GET_USERS\r\n} from \"./actionsType\";\r\nimport {onValue, ref, query, orderByChild, equalTo} from \"firebase/database\";\r\nimport {db} from \"../base\";\r\nimport {usersAPI} from \"../Api/api\";\r\n\r\n\r\nexport const acceptFollow = (userId, user) => ({type: ADD_FAVORITE_USERS, userId, user})\r\nexport const acceptUnfollow = (userId, user) => ({type: REMOVE_FAVORITE_USERS, userId, user})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleInProgress = (isFetching, userId) => ({type: TOGGLE_IS_FAVORING_PROGRESS, isFetching, userId})\r\nexport const getUsers = (users) => ({type: GET_USERS, users})\r\nexport const deleteUser = (userId, user) => ({type: REMOVE_USER, userId, user})\r\n\r\n\r\nexport const setUserThunkCreator = (name, email, photo, type) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        await usersAPI.setUser(name, email, photo, type)\r\n        dispatch(toggleIsFetching(false))\r\n    }\r\n}\r\n\r\nexport const getUsersThunkCreator = () => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        const mostViewedSort = query(ref(db, 'psychologists'), orderByChild('type'), equalTo('Психолог'))\r\n        const starCountRef = ref(db, \"psychologists\");\r\n        onValue(starCountRef, (res) => {\r\n            const users = res.val();\r\n            dispatch(getUsers(users))\r\n            dispatch(toggleIsFetching(false))\r\n        })\r\n    }\r\n}\r\n\r\nexport const following = (userId, user) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleInProgress(true, userId))\r\n        await usersAPI.setFollow(user)\r\n        dispatch(acceptFollow(userId, user))\r\n        dispatch(toggleInProgress(false, userId))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const unfollowing = (userId, user) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleInProgress(true, userId))\r\n        await usersAPI.setUnfollow(user)\r\n        dispatch(acceptUnfollow(userId, user))\r\n        dispatch(toggleInProgress(false, userId))\r\n\r\n    }\r\n}\r\n\r\nexport const delUser = (userId, user) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        await usersAPI.setDelete(user)\r\n        // dispatch(deleteUser(user))\r\n        dispatch(toggleInProgress(false, userId))\r\n\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nconst Alert = () => {\r\n    return (\r\n        <div className=\"alert alert-warning alert-dismissible\" role=\"alert\">\r\n            <strong>Внимание!</strong> База данных пустая. Заполните ее или обратитесь к\r\n            администратору\r\n            <button type=\"button\" className=\"btn-close\" aria-label=\"Close\"></button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","export default __webpack_public_path__ + \"static/media/img1.fd82ac26.jpg\";","import React from 'react';\r\nimport image from \"../../img/img1.jpg\";\r\n\r\nconst Card = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n                {props.users.map((user) => (\r\n                    <div key={props.info[user].id} className=\"col\">\r\n                        <div className=\"card h-100\">\r\n                            <img src={props.info[user].photo === \"null\" ? image : props.info[user].photo}\r\n                                 className=\"card-img-top\"\r\n                                 style={{height: \"17rem\", objectFit: \"cover\"}}\r\n                                 alt=\"...\"/>\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title mb-4\">{user}</h4>\r\n                                <p className=\"card-text text-muted\">\r\n                                    Специальность: {props.info[user].type}\r\n                                </p>\r\n                                <p className=\"card-text text-muted\">\r\n                                    Email: {props.info[user].email}\r\n                                </p>\r\n                                <p className=\"card-text text-muted\">\r\n                                    Id: {props.info[user].id}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"card-footer d-flex justify-content-between \">\r\n\r\n                                {/*{props.info[user].followed*/}\r\n                                {/*    ?*/}\r\n                                {/*    <button disabled={props.inProgress.some(id => id === props.info[user].id)}*/}\r\n                                {/*            className='btn btn-secondary'*/}\r\n                                {/*            onClick={() => {*/}\r\n                                {/*                props.unfollowing(props.info[user].id, user)*/}\r\n                                {/*            }}>Unfollow</button>*/}\r\n                                {/*    :*/}\r\n                                {/*    <button disabled={props.inProgress.some(id => id === props.info[user].id)}*/}\r\n                                {/*            className='btn btn-success'*/}\r\n                                {/*            onClick={() => {*/}\r\n                                {/*                props.following(props.info[user].id, user)*/}\r\n                                {/*            }}>Follow</button>}*/}\r\n\r\n\r\n                                <button\r\n                                    className={` ${props.info[user].followed ? 'btn btn-secondary' : 'btn btn-success'}`}\r\n                                    disabled={!props.isAuth ? 'true' : props.inProgress.some(id => id === props.info[user].id)}\r\n                                    onClick={() => {\r\n                                        props.info[user].followed ?\r\n                                            props.unfollowing(props.info[user].id, user)\r\n                                            :\r\n                                            props.following(props.info[user].id, user)\r\n                                    }}\r\n                                >\r\n                                    {props.info[user].followed ? 'Unfollow' : \"Follow\"}\r\n                                </button>\r\n                                <button\r\n                                    className='btn btn-danger'\r\n                                    disabled={!props.isAuth && true}\r\n                                    onClick={() => {\r\n                                        props.delUser(props.info[user].id, user)\r\n                                    }}>Delete\r\n                                </button>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n\r\n\r\n            </div>\r\n\r\n            {/*<div className='container'>*/}\r\n            {/*    {props.users.map((user) => (*/}\r\n            {/*        <div key={props.info[user].id} className='container'>*/}\r\n            {/*            <div className=\"card border-dark m-3\" style={{maxWidth: \"560px\"}}>*/}\r\n            {/*                <div className=\"row g-4\">*/}\r\n            {/*                    <div className=\"col-md-4\">*/}\r\n            {/*                        <img src={props.info[user].photo === \"null\" ? image : props.info[user].photo}*/}\r\n            {/*                             className=\"img-fluid rounded-start\"*/}\r\n            {/*                             alt=\"...\"/>*/}\r\n            {/*                    </div>*/}\r\n            {/*                    <div className=\"col-md-8 mb-2\">*/}\r\n            {/*                        <div className=\"card-body \">*/}\r\n            {/*                            <h5 className=\"card-title\">{user}</h5>*/}\r\n            {/*                            <p className=\"card-text\">*/}\r\n            {/*                                {props.info[user].type}*/}\r\n            {/*                            </p>*/}\r\n            {/*                            <p className=\"card-text\"><small className=\"text-muted\">*/}\r\n            {/*                                Email: {props.info[user].email}*/}\r\n            {/*                            </small></p>*/}\r\n            {/*                            <p className=\"card-text\"><small className=\"text-muted\">*/}\r\n            {/*                                Id: {props.info[user].id}*/}\r\n            {/*                            </small></p>*/}\r\n            {/*                        </div>*/}\r\n            {/*                        <div className='card-text justify-content-center'>*/}\r\n            {/*                            <button*/}\r\n            {/*                                className={` ${props.info[user].followed ? 'btn btn-secondary' : 'btn btn-success'}`}*/}\r\n            {/*                                onClick={() => {*/}\r\n            {/*                                    const r = ref(db, '/psychologists/' + user)*/}\r\n            {/*                                    props.info[user].followed ?*/}\r\n            {/*                                        update(r, {\"followed\": false})*/}\r\n            {/*                                        // props.unfollow(props.info[user].id)*/}\r\n            {/*                                        :*/}\r\n            {/*                                        update(r, {\"followed\": true})*/}\r\n            {/*                                    // props.follow(props.info[user].id)*/}\r\n            {/*                                }}*/}\r\n            {/*                            >*/}\r\n            {/*                                {props.info[user].followed ? 'Unfollow' : \"Follow\"}*/}\r\n            {/*                            </button>*/}\r\n\r\n            {/*                            /!*{props.info[user].followed*!/*/}\r\n            {/*                            /!*    ?*!/*/}\r\n            {/*                            /!*    <button className='btn btn-secondary' onClick={() => {*!/*/}\r\n            {/*                            /!*        const r = ref(db, '/psychologists/' + user)*!/*/}\r\n            {/*                            /!*        update(r, {\"followed\": false})*!/*/}\r\n            {/*                            /!*        // props.unfollow(props.info[user].id)*!/*/}\r\n            {/*                            /!*    }}>Unfollow</button>*!/*/}\r\n            {/*                            /!*    :*!/*/}\r\n            {/*                            /!*    <button className='btn btn-success' onClick={() => {*!/*/}\r\n            {/*                            /!*        const r = ref(db, '/psychologists/' + user)*!/*/}\r\n            {/*                            /!*        update(r, {\"followed\": true})*!/*/}\r\n            {/*                            /!*        // props.follow(props.info[user].id)*!/*/}\r\n            {/*                            /!*    }}>Follow</button>}*!/*/}\r\n\r\n            {/*                            <button className='btn btn-danger' onClick={() => {*/}\r\n            {/*                                set(ref(db, '/psychologists/' + user), null)*/}\r\n            {/*                            }}>Delete</button>*/}\r\n            {/*                        </div>*/}\r\n            {/*                    </div>*/}\r\n            {/*                </div>*/}\r\n            {/*            </div>*/}\r\n            {/*        </div>*/}\r\n            {/*    ))}*/}\r\n            {/*</div>*/}\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../Users/Card\";\r\n\r\nconst Disfavoured = (props) => {\r\n    const users = Object.keys(props.users).filter((user) => props.users[user].followed === false)\r\n    const info = props.users\r\n    const toggleInProgress = props.toggleInProgress\r\n    const inProgress = props.favoriteInProgress\r\n    const following = props.following\r\n    const unfollowing = props.unfollowing\r\n    const delUser = props.delUser\r\n    const isAuth = props.isAuth\r\n    return (\r\n        <div className='container'>\r\n            <h4>Disfavored Users</h4>\r\n            <Card\r\n                users={users}\r\n                info={info}\r\n                toggleInProgress={toggleInProgress}\r\n                inProgress={inProgress}\r\n                following={following}\r\n                unfollowing={unfollowing}\r\n                delUser={delUser}\r\n                isAuth={isAuth}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Disfavoured\r\n","import React, {Component, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Disfavoured from \"./Disfavoured\";\r\nimport {\r\n    delUser,\r\n    following,\r\n    getUsersThunkCreator,\r\n    toggleInProgress,\r\n    unfollowing\r\n} from \"../../store/actions\";\r\n\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Alert from \"../common/Alert/Alert\";\r\n\r\n\r\nconst DisfavoredContainer = (props) => {\r\n\r\n    useEffect(() => {\r\n        //получаем пользователей с нашей базы Firebase и выводим их\r\n        props.getUsersThunkCreator()\r\n\r\n    }, [])\r\n    return (\r\n        <>\r\n            {!props.users ?\r\n                <Alert/>\r\n                :\r\n                <>\r\n                    {props.isFetching ?\r\n                        <Preloader/>\r\n                        :\r\n                        <Disfavoured\r\n                            isAuth={props.isAuth}\r\n                            users={props.users}\r\n                            toggleInProgress={props.toggleInProgress}\r\n                            favoriteInProgress={props.favoriteInProgress}\r\n                            following={props.following}\r\n                            unfollowing={props.unfollowing}\r\n                            delUser={props.delUser}\r\n                        />\r\n                    }\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: state.usersPage.users,\r\n        isFetching: state.usersPage.isFetching,\r\n        favoriteInProgress: state.usersPage.favoriteInProgress,\r\n        isAuth: state.authUser.isAuth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    toggleInProgress, getUsersThunkCreator, following, unfollowing, delUser\r\n})(DisfavoredContainer);\r\n\r\n\r\n"],"sourceRoot":""}